{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Wyltl",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.wyltl",
					"match": "//.*$"
				},
				{
					"name": "comment.block.wyltl",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.wyltl",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.wyltl",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.wyltl",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.wyltl",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.wyltl",
			"match": "-?\\d+[\\d\\.eE]*"
		},
		"booleans": {
			"name": "constant.language.wyltl",
			"match": "\\b(true|false)\\b"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.wyltl",
					"match": "\\b(plus|minus|times|over|modulo|if|or|and|above|below|while|for|return|equals|nequals|suppose|is|compose)\\b"
				},
				{
					"name": "keyword.operator.punctuation.wyltl",
					"match": "[\\[\\]\\(\\),\\.]"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.wyltl",
					"match": "\\b(print|length|changeArrayElement|pushArrayElement|popArrayElement|firstArrayElement|lastArrayElement|stringToArray|arrayToString|swapArrayElement|enqueueArrayElement|dequeueArrayElement|cutLineArrayElement|reverseString|upperCaseString|lowerCaseString|inputText|inputNumber|inputFloat|exponent|logarithm|minimum|maximum|sine|cosine|tangent|arcSine|arcCosine|arcTangent|absoluteValue|toPowerOf|squareRoot|presentYear|presentMonth|presentDay|presentHour|presentMinute|presentSecond|typeOf)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.wyltl",
					"match": "\\b(if|while|for|return)\\b"
				}
			]
		},
		"variables": {
			"name": "variable.other.wyltl",
			"match": "[a-zA-Z_][a-zA-Z0-9_]*"
		}
	},
	"scopeName": "source.wyltl"
}